1
00:00:00,000 --> 00:00:01,553
With everything you've learned,
以你到目前为止所学的

2
00:00:01,553 --> 00:00:02,727
you're just about ready to
你应当到了

3
00:00:02,727 --> 00:00:04,810
tackle your first programming assignment.
可以开始攻克第一个编程作业的时候了

4
00:00:04,810 --> 00:00:05,914
Before you do that,
在动手之前

5
00:00:05,914 --> 00:00:07,070
let me just give you a quick tour
让我为你快速介绍一下

6
00:00:07,070 --> 00:00:10,396
of ipython notebooks in Coursera.
Coursera上的iPython notebook

7
00:00:10,396 --> 00:00:13,275
Here you see,Jupiter iphython notebooks
这就是Jupiter ipython界面

8
00:00:13,275 --> 00:00:14,847
that you can get to in Coursera.
你可以从Coursera中打开它

9
00:00:14,847 --> 00:00:17,416
Let me just quickly show you a few features of this.
我先简短给你展示一下它的一些功能

10
00:00:17,416 --> 00:00:21,222
The instructions are written right here in the text in the
这个notebook自带了说明

11
00:00:21,222 --> 00:00:23,891
iPython notebook and these little
写在了文字区域内 而这下面的

12
00:00:23,891 --> 00:00:26,562
light grey blocks are blocks of code.
这些浅灰色的框 则是代码框

13
00:00:26,562 --> 00:00:29,351
So occasionally, you see in these blocks, sometimes they'll say
有时你能看到在这些浅灰色的块中写着

14
00:00:29,351 --> 00:00:31,064
this is the "START CODE HERE" and "END CODE HERE".
"代码开始处" 与 "代码终止处"

15
00:00:31,064 --> 00:00:34,333
To do the programming exercise, please make sure to write your code
当做编程作业时 请确保你把代码

16
00:00:34,333 --> 00:00:37,542
between the "START CODE HERE" and "END CODE HERE".
都写在这两行字之间

17
00:00:37,542 --> 00:00:41,895
so for example print "Hello World"
比如我写代码印出 "Hello World"

18
00:00:41,895 --> 00:00:43,363
Then to execute a code block
如果要执行一个代码框中的代码

19
00:00:43,363 --> 00:00:46,805
You can hit Shift+Enter,
你可以按 Shift+Enter

20
00:00:46,805 --> 00:00:48,506
And then to execute this code block
所以我们执行一下这行

21
00:00:48,506 --> 00:00:50,976
which I guess we just wrote print "Hello World",
就是刚才写的 print "Hello World"

22
00:00:50,976 --> 00:00:54,796
So that printed "Hello World".
于是它就印出了"Hello World"

23
00:00:54,796 --> 00:00:58,117
To run one of these code blocks as a cell, you can also
如果某个单元格是代码块类型的单元格的话

24
00:00:58,117 --> 00:01:03,314
click "Cell", and then "Run Cell" so it executes this.
你也可以点击 Cell 然后点 Run Cell 就会执行其中的代码

25
00:01:03,314 --> 00:01:05,290
It's possible that on your computer the
也许在你的电脑上

26
00:01:05,290 --> 00:01:07,210
keyboard shortcut for Cell/Run Cell
Cell 里的 Run Cell 的快捷键

27
00:01:07,210 --> 00:01:09,923
might be different than Shift+Enter,
可能不是 Shift+Enter

28
00:01:09,923 --> 00:01:14,259
but on both my Mac as well as on my PC
但是在我的苹果电脑和我的普通电脑上

29
00:01:14,259 --> 00:01:18,437
it's Shift+Enter so it might be the same for you as well.
快捷键都是 Shift+Enter 所以可能你也是一样吧

30
00:01:18,437 --> 00:01:20,793
Now when you read the instructions, if you accidentally
如果你在阅读说明时一不小心双击了代码框

31
00:01:20,793 --> 00:01:23,841
double-click on it you may end up with this Markdown language.
它可能会变成 Markdown 语言

32
00:01:24,058 --> 00:01:27,943
If you end up with this funny-looking text, to convert it
如果你的代码突然变成了这种奇怪的文字

33
00:01:27,943 --> 00:01:30,485
to the nice-looking text, just run the cell, so
只要运行一下这个框就能变回来

34
00:01:30,485 --> 00:01:33,650
you'd click the Cell, Run Cell, or I'm gonna hit Shift+Enter,
所以你可以点 Cell 再点 Run Cell 或按 Shift+Enter

35
00:01:33,650 --> 00:01:38,124
and that basically executes the Markdown and turns it back
这实际上把Markdown当作了代码执行

36
00:01:38,124 --> 00:01:40,697
to this nice looking code.
也就变成了正常的文字

37
00:01:40,697 --> 00:01:44,501
Just a couple more tips, when you execute code like this,
再提示几点 这些你所执行的代码

38
00:01:44,501 --> 00:01:48,141
it actually runs on a kernel,
实际上是运行在一个内核(kernel)中的

39
00:01:48,141 --> 00:01:51,104
or a piece of code that runs on a server,
也就是在某台服务器上运行的一段代码

40
00:01:51,104 --> 00:01:53,076
If it's running an excessively large job,
如果这个内核的运算量非常大的话

41
00:01:55,477 --> 00:01:57,868
or if you leave the computer for a very long time,
或者你离开电脑很长时间

42
00:01:57,768 --> 00:02:00,975
or something goes wrong, your internet connection or something,
或者出了什么意外 譬如你断网了之类的

43
00:02:00,975 --> 00:02:03,175
there is a small chance that the kernel in the back end may die,
会有小机率导致这些在后端运行的内核意外终止

44
00:02:03,175 --> 00:02:04,875
in which case just click Kernel,
这种情况下 只要点击 Kernel

45
00:02:04,875 --> 00:02:09,475
and then Restart Kernel and hopefully, that will reboot the kernel
然后再点 Restart Kernel 这样应该就能重启内核

46
00:02:09,475 --> 00:02:11,952
and make it work again. That shouldn't happen
并将它恢复了 这种情形不应该发生在

47
00:02:11,952 --> 00:02:14,735
if you're just running relatively small jobs and
你运行的运算任务都很小的情况下

48
00:02:14,735 --> 00:02:17,599
just starting up your iPython notebook,
或是你的 notebook 才刚刚开启的情况下

49
00:02:17,599 --> 00:02:19,178
if you see an error message that
不过如果你看到了错误消息

50
00:02:19,178 --> 00:02:21,571
the kernel has died or something, you can try
说内核终止或之类的情况

51
00:02:21,571 --> 00:02:24,667
Kernel, Restart. Finally, in an iPython
你可以试着重启内核 最后的一点提示是

52
00:02:24,667 --> 00:02:27,486
notebook like this, there may be multiple
在像这样的 iPython notebook 中 可能会

53
00:02:27,486 --> 00:02:30,665
blocks of code, so even if an earlier block of code
有很多的代码框 而有的靠前的代码框中

54
00:02:30,665 --> 00:02:32,788
doesn't have any graded code,
可能没有任何会需要打分的代码

55
00:02:32,788 --> 00:02:34,263
be sure to execute this block of code
但也务必执行它们

56
00:02:34,263 --> 00:02:36,519
because in this example,
因为在这个例子中

57
00:02:36,680 --> 00:02:39,769
it imports numpy as np and so on,
这个代码把 numpy 程序库导入为了 np

58
00:02:39,769 --> 00:02:41,951
and sets some variables you'll need
还设定了一些你之后需要的变量

59
00:02:41,951 --> 00:02:45,062
in order to execute the lower-down blocks of code.
有了这些变量你才能执行接下来的代码

60
00:02:45,062 --> 00:02:47,155
So be sure to execute the ones on top,
所以请务必执行前面的代码

61
00:02:47,155 --> 00:02:50,472
even if you aren't asked to write any code in them.
哪怕你没有被要求在其中写任何代码也要如此

62
00:02:50,472 --> 00:02:53,589
And finally when you're done implementing your solutions
当你最终把解法实现完成时

63
00:02:53,589 --> 00:02:55,370
there's this blue submit assignment button
这里有一个蓝色的提交作业按钮

64
00:02:55,370 --> 00:02:58,396
here on the right, and we click that, and
位于界面右侧 只需点一下它

65
00:02:58,396 --> 00:03:01,151
we'll submit your solutions for grading.
你的解答就会被提交并评分

66
00:03:01,151 --> 00:03:04,462
I found that the interactive
我发现由于iPython notebook

67
00:03:04,462 --> 00:03:07,258
command shell nature of iPython notebooks
本质上是一个交互式命令外壳(shell)

68
00:03:07,258 --> 00:03:10,097
is very useful for letting you quickly implement
因此它对于快速实现代码非常有用

69
00:03:10,097 --> 00:03:12,588
a few lines of code, see an outcome,
你可以写几行代码 就立即观察到结果

70
00:03:12,588 --> 00:03:14,745
learn to iterate very quickly, and so I hope that
也可以学习快速迭代 所以我希望

71
00:03:14,745 --> 00:03:19,549
the programming exercises in the Coursera Jupyter iPython notebooks
Coursera上的Jupyter iPython notebook编程作业

72
00:03:19,549 --> 00:03:22,369
will help you to quickly learn, experiment and see
能够帮助你快速学习 尝试 并且理解

73
00:03:22,369 --> 00:03:24,632
how to implement these learning algorithms.
如何实现这些深度学习算法

74
00:03:24,632 --> 00:03:27,489
There's one more video after this that's an optional video,
在这个可选视频之后还有一个视频

75
00:03:27,489 --> 00:03:30,627
that talks about the cost function of Logistic regression,
它讨论的内容是逻辑回归中的代价函数

76
00:03:30,782 --> 00:03:34,505
you can watch that or not, either way is perfectly fine,
你看或不看都可以 都完全没有关系

77
00:03:34,505 --> 00:03:36,119
but either way, best of luck with the
但无论如何 都祝你好运

78
00:03:36,119 --> 00:03:38,284
week 2 programming assignments
祝你顺利完成第二周的编程作业

79
00:03:38,284 --> 00:03:40,335
and I also look forward to seeing you
我也很期待能够

80
00:03:40,335 --> 00:03:42,203
at the start of the week 3 materials.
在第三周的课程开始时再次见到你

